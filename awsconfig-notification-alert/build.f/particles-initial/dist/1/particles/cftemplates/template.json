{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "IsTest": {
      "Fn::Equals": [
        {
          "Ref": "IsTest"
        },
        "true"
      ]
    }
  },
  "Outputs": {
    "AccountId": {
      "Value": {
        "Ref": "AWS::AccountId"
      }
    },
    "StacksRegion": {
      "Value": {
        "Ref": "AWS::Region"
      }
    },
    "NotificationAlertSaverFunctionName": {
      "Value": {
        "Fn::GetAtt": [
          "NotificationAlertSaverFunctionInfo",
          "Name"
        ]
      }
    },
    "NotificationAlertSaverFunctionArn": {
      "Value": {
        "Fn::GetAtt": [
          "NotificationAlertSaverFunctionInfo",
          "Arn"
        ]
      }
    },
    "NotificationAlertSaverFunctionRoleArn": {
      "Value": {
        "Fn::GetAtt": [
          "NotificationAlertSaverFunctionRoleInfo",
          "Arn"
        ]
      }
    },
    "NotificationAlertEventSourceArn": {
      "Value": {
        "Fn::GetAtt": [
          "NotificationAlertStreamsTrigger",
          "EventSourceArn"
        ]
      }
    },
    "AlertMessagesFunctionName": {
      "Value": {
        "Ref": "AlertMessagesFunctionInfo"
      }
    },
    "AlertMessagesFunctionArn": {
      "Value": {
        "Fn::GetAtt": [
          "AlertMessagesFunctionInfo",
          "Arn"
        ]
      }
    },
    "AlertMessagesFunctionRoleArn": {
      "Value": {
        "Fn::GetAtt": [
          "AlertMessagesFunctionRoleInfo",
          "Arn"
        ]
      }
    },
    "SnsSubscribeLambdaFunction": {
      "Value": {
        "Fn::GetAtt": [
          "SnsSubscribeLambdaFunction",
          "Name"
        ]
      }
    },
    "SnsSubscribeLambdaFunctionArn": {
      "Value": {
        "Fn::GetAtt": [
          "SnsSubscribeLambdaFunction",
          "Arn"
        ]
      }
    },
    "SnsSubscribeFunctionRoleArn": {
      "Value": {
        "Fn::GetAtt": [
          "SnsSubscribeFunctionRoleInfo",
          "Arn"
        ]
      }
    }
  },
  "Parameters": {
    "IsTest": {
      "Type": "String",
      "Default": "false",
      "Description": "Enter 'true' If This Stack Is For Test"
    },
    "ReadCapacityUnits": {
      "Type": "Number",
      "Default": "1",
      "Description": "Enter The Read Capacity Units For The DynamoDB"
    },
    "WriteCapacityUnits": {
      "Type": "Number",
      "Default": "1",
      "Description": "Enter The Write Capacity Units For The DynamoDB"
    },
    "DynamoDBTableNameForStreams": {
      "Type": "String",
      "Default": "notificationalerts",
      "Description": "The dynamodb table name whose streams will be enabled and associated with a lambda function"
    }
  },
  "Resources": {
    "DeployerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "sgas.particles-notificationalert.442294194136.us-west-2",
          "S3Key": "particles/assets/cloudformation_builder.zip"
        },
        "Handler": "cloudformation/index_lambda_deployer.handler",
        "Runtime": "nodejs",
        "Timeout": "60",
        "Role": {
          "Fn::GetAtt": [
            "DeployerLambdaExecutionRole",
            "Arn"
          ]
        }
      }
    },
    "DeployerLambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Statement": [
                {
                  "Resource": "arn:aws:logs:*:*:*",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow"
                },
                {
                  "Resource": "arn:aws:logs:*:*:*",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow"
                },
                {
                  "Resource": "*",
                  "Action": [
                    "cloudwatch:*",
                    "iam:*",
                    "s3:*",
                    "lambda:*",
                    "dynamodb:*",
                    "sns:*"
                  ],
                  "Effect": "Allow"
                }
              ],
              "Version": "2012-10-17"
            }
          }
        ]
      }
    },
    "PermissionLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "sgas.particles-notificationalert.442294194136.us-west-2",
          "S3Key": "particles/assets/cloudformation_builder.zip"
        },
        "Handler": "cloudformation/index_lambda_permission.handler",
        "Runtime": "nodejs",
        "Timeout": "60",
        "Role": {
          "Fn::GetAtt": [
            "DeployerLambdaExecutionRole",
            "Arn"
          ]
        }
      }
    },
    "DynamoDBStreamsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "sgas.particles-notificationalert.442294194136.us-west-2",
          "S3Key": "particles/assets/cloudformation_builder.zip"
        },
        "Handler": "cloudformation/index_streams_trigger.handler",
        "Runtime": "nodejs",
        "Timeout": "60",
        "Role": {
          "Fn::GetAtt": [
            "DeployerLambdaExecutionRole",
            "Arn"
          ]
        }
      }
    },
    "NotificationAlerts": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "notificationalerts",
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": {
            "Ref": "ReadCapacityUnits"
          },
          "WriteCapacityUnits": {
            "Ref": "WriteCapacityUnits"
          }
        }
      }
    },
    "NotificationAlertStreamsTrigger": {
      "Type": "Custom::NotificationAlertStreamsTrigger",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "DynamoDBStreamsLambdaFunction",
            "Arn"
          ]
        },
        "PackageJSON": {
          "region": {
            "Ref": "AWS::Region"
          },
          "functionName": {
            "Fn::GetAtt": [
              "AlertMessagesFunctionInfo",
              "Arn"
            ]
          },
          "tableName": {
            "Ref": "DynamoDBTableNameForStreams"
          }
        }
      }
    },
    "AlertMessagesFunctionRoleInfo": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "InlinePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": [
                    "*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:GetRecords",
                    "dynamodb:GetShardIterator",
                    "dynamodb:DescribeStream",
                    "dynamodb:ListStreams",
                    "dynamodb:PutItem",
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "AlertMessagesFunctionInfo": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "sgas.particles-notificationalert.442294194136.us-west-2",
          "S3Key": "particles/assets/index_alertmessages.zip"
        },
        "Handler": "lambda/index_alertmessages.handler",
        "Runtime": "nodejs",
        "Timeout": "30",
        "Role": {
          "Fn::GetAtt": [
            "AlertMessagesFunctionRoleInfo",
            "Arn"
          ]
        }
      }
    },
    "NotificationAlertSaverFunctionInfo": {
      "Type": "Custom::NotificationAlertSaverFunctionInfo",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "DeployerLambdaFunction",
            "Arn"
          ]
        },
        "Region": {
          "Ref": "AWS::Region"
        },
        "FunctionName": "notificationalert_saver",
        "Code": {
          "S3Bucket": "sgas.particles-notificationalert.442294194136.us-west-2",
          "S3Key": "particles/assets/notificationalert.zip"
        },
        "Handler": "awsconfig-notification-alert/index_saver.handler",
        "Runtime": "nodejs",
        "Timeout": "60",
        "MemorySize": "128",
        "Role": {
          "Fn::GetAtt": [
            "NotificationAlertSaverFunctionRoleInfo",
            "Arn"
          ]
        }
      }
    },
    "NotificationAlertSaverFunctionRoleInfo": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "InlinePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "cloudwatch:*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:ListTopics",
                    "sns:SetTopicAttributes",
                    "sns:Publish",
                    "sns:Subscribe"
                  ],
                  "Resource": "arn:aws:sns:*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:Query"
                  ],
                  "Resource": [
                    "arn:aws:dynamodb:*"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "NotificationAlertSaverFunctionPermission": {
      "Type": "Custom::NotificationAlertSaverFunctionPermission",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "PermissionLambdaFunction",
            "Arn"
          ]
        },
        "AWSAccountId": {
          "Ref": "AWS::AccountId"
        },
        "PackageJSON": {
          "region": {
            "Ref": "AWS::Region"
          },
          "functionName": {
            "Fn::GetAtt": [
              "NotificationAlertSaverFunctionInfo",
              "Name"
            ]
          },
          "action": "lambda:invokeFunction",
          "principal": "sns.amazonaws.com",
          "statementId": "sns_invoke"
        }
      }
    },
    "SnsSubscribeLambdaFunction": {
      "Type": "Custom::SnsSubscribeLambdaFunction",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "DeployerLambdaFunction",
            "Arn"
          ]
        },
        "Region": {
          "Ref": "AWS::Region"
        },
        "FunctionName": "sns-subscribe_lambda_function",
        "Code": {
          "S3Bucket": "sgas.particles-notificationalert.442294194136.us-west-2",
          "S3Key": "particles/assets/notificationalert.zip"
        },
        "Handler": "awsconfig-notification-alert/index_sns_subscribe.handler",
        "Runtime": "nodejs",
        "Timeout": "60",
        "MemorySize": "128",
        "Role": {
          "Fn::GetAtt": [
            "SnsSubscribeFunctionRoleInfo",
            "Arn"
          ]
        }
      }
    },
    "SnsSubscribeFunctionRoleInfo": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "InlinePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "config:*",
                    "iam:*",
                    "lambda:*",
                    "sns:*",
                    "tag:Get*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                }
              ]
            }
          }
        ]
      }
    }
  }
}